<?php
/**
 * Plugin Name: My Stanford Authentication Configuration
 * Version: 0.1.0
 * Description: Site-specific configuration for Stanford Auth plugin for "My Site"
 * Author: John Doe
 * Author URI: https://mysite.stanford.edu
 * Plugin URI: https://code.stanford.edu.org/myorg/mysite-stanford-auth-config/
 *
 * @package Stanford_Auth_Config
 */

function my_stanford_auth_options( $default_value, $option_name ) {
  $options = array(

    /**
     * Map attribute values to roles or users. The map is structured
     * as a hash of attribute names to hashes of attribute values to a
     * user or role. Role names need to be prefixed with 'role:'; user
     * names need to be prefixed with 'user:', as shown below.
     *
     * The roles are users must already exist.
     *
     * Generally, the user mapping should only be allowed for basic
     * authenticated access; the user should be created with no role
     * (which may not be possible, so create the user as a subscriber,
     * then edit the user and set the role to None - this prevents
     * anyone from updating the user profile).
     *
     * Default is an empty array, so no mapping happens
     *
     * @param array
     */
    'attribute_map' => array (
      'entitlement' => array (
        'itlab:staff' => 'role:administrator',
        'test:staff'  => 'role:author',
        'test:faculty' => 'role:contributor',
      ),
      'affiliation' => array (
        'student@stanford.edu' => 'user:general-user'
      )
    ),

    /**
     * Override the SAML EntityId generated by the plugin
     *
     * @param string
     */
    'entityId' => 'http://wp-test.itlab.stanford.edu',

    /**
     * Absolute path to the public certificate used for SAML signing
     * verification / encryption
     *
     * @param string
     */
    'sp_cert_file' => plugin_dir_path( __FILE__ ) . 'private/sp.crt',

    /**
     * String containing the public certificate for SAML
     *
     * @param string
     */
    'sp_cert' => null,

    /**
     * Absolute path to the private key used for SAML signing /
     * decryption
     *
     * @param string
     */
    'sp_key_file'  => plugin_dir_path( __FILE__ ) . 'private/sp.key',

    /**
     * String containing the private key for SAML
     *
     * @param string
     */
    'sp_key' => null,


    /**
     * Allow regular Wordpress logins?
     *
     * Default is true - users can choose Wordpress or SAML login
     *
     * @param bool
     */
    //'permit_wp_login' => true,

    /**
     * Map any authenticated but unmapped user to a specific
     * (existing) user
     *
     * Default is null - unmapped users will be handled according to
     * the deny_unmapped_users setting
     *
     * @param string
     */
    //'default_user' => 'anonymous',

    /**
     * Deny access to any authenticated user who could not be mapped
     * to a role or a user
     *
     * Default is false - unmapped users will continue to use their
     * pre-assigned roles, or a new user will be created with the
     * default Wordpress role
     *
     * @param bool
     */
    //'deny_unmapped_user' => false,

    /**
     * Which Stanford IdP to use?
     *
     * Default is 'stanford' (login.stanford.edu); set to 'itlab' to
     * use login.itlab.stanford.edu
     *
     * @param string
     */
    //'idp' => 'itlab',
  );

  return isset( $options[ $option_name ] ) ? $options[ $option_name ] : $default_value;
}

add_filter( 'stanford_auth_option', 'my_stanford_auth_options', 0, 2 );
